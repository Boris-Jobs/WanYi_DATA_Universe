/*
 * Oceanengine Open Api
 * 巨量引擎开放平台 Open Api
 *
 * The version of the OpenAPI document: 1.0.16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bytedance.ads.model;

import java.util.Objects;
import java.util.Arrays;
import com.bytedance.ads.model.CreativeTemplateListGetV2DataListsImageMode;
import com.bytedance.ads.model.CreativeTemplateListGetV2DataListsTemplateType;
import com.bytedance.ads.model.CreativeTemplateListGetV2ResponseDataListsInnerTemplateTagsInner;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.bytedance.ads.JSON;

/**
 * CreativeTemplateListGetV2ResponseDataListsInner
 */
@javax.annotation.Generated(value = "com.org.bytedance.ad_open_sdk.JavacusGenerator", date = "2024-01-10T18:05:36.409643208+08:00[PRC]")
public class CreativeTemplateListGetV2ResponseDataListsInner {
  public static final String SERIALIZED_NAME_COVER_URL = "cover_url";
  @SerializedName(SERIALIZED_NAME_COVER_URL)
  private String coverUrl = null;

  public static final String SERIALIZED_NAME_IMAGE_MODE = "image_mode";
  @SerializedName(SERIALIZED_NAME_IMAGE_MODE)
  private CreativeTemplateListGetV2DataListsImageMode imageMode = null;

  public static final String SERIALIZED_NAME_PREVIEW_URL = "preview_url";
  @SerializedName(SERIALIZED_NAME_PREVIEW_URL)
  private String previewUrl = null;

  public static final String SERIALIZED_NAME_TEMPLATE_DESC = "template_desc";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_DESC)
  private String templateDesc = null;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private Long templateId = null;

  public static final String SERIALIZED_NAME_TEMPLATE_NAME = "template_name";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_NAME)
  private String templateName = null;

  public static final String SERIALIZED_NAME_TEMPLATE_TAGS = "template_tags";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_TAGS)
  private List<CreativeTemplateListGetV2ResponseDataListsInnerTemplateTagsInner> templateTags = null;

  public static final String SERIALIZED_NAME_TEMPLATE_TYPE = "template_type";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_TYPE)
  private CreativeTemplateListGetV2DataListsTemplateType templateType = null;

  public CreativeTemplateListGetV2ResponseDataListsInner() {
  }

  public CreativeTemplateListGetV2ResponseDataListsInner coverUrl(String coverUrl) {
    
    this.coverUrl = coverUrl;
    return this;
  }

   /**
   * 模板的封面图
   * @return coverUrl
  **/
  @javax.annotation.Nullable
  public String getCoverUrl() {
    return coverUrl;
  }


  public void setCoverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
  }


  public CreativeTemplateListGetV2ResponseDataListsInner imageMode(CreativeTemplateListGetV2DataListsImageMode imageMode) {
    
    this.imageMode = imageMode;
    return this;
  }

   /**
   * Get imageMode
   * @return imageMode
  **/
  @javax.annotation.Nullable
  public CreativeTemplateListGetV2DataListsImageMode getImageMode() {
    return imageMode;
  }


  public void setImageMode(CreativeTemplateListGetV2DataListsImageMode imageMode) {
    this.imageMode = imageMode;
  }


  public CreativeTemplateListGetV2ResponseDataListsInner previewUrl(String previewUrl) {
    
    this.previewUrl = previewUrl;
    return this;
  }

   /**
   * 模板预览链接
   * @return previewUrl
  **/
  @javax.annotation.Nullable
  public String getPreviewUrl() {
    return previewUrl;
  }


  public void setPreviewUrl(String previewUrl) {
    this.previewUrl = previewUrl;
  }


  public CreativeTemplateListGetV2ResponseDataListsInner templateDesc(String templateDesc) {
    
    this.templateDesc = templateDesc;
    return this;
  }

   /**
   * 模板描述，用以说明例如\&quot;这个模板需要计划下自提素材中含有竖版视频才可用\&quot;等必要说明信息
   * @return templateDesc
  **/
  @javax.annotation.Nullable
  public String getTemplateDesc() {
    return templateDesc;
  }


  public void setTemplateDesc(String templateDesc) {
    this.templateDesc = templateDesc;
  }


  public CreativeTemplateListGetV2ResponseDataListsInner templateId(Long templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * 模板ID
   * @return templateId
  **/
  @javax.annotation.Nullable
  public Long getTemplateId() {
    return templateId;
  }


  public void setTemplateId(Long templateId) {
    this.templateId = templateId;
  }


  public CreativeTemplateListGetV2ResponseDataListsInner templateName(String templateName) {
    
    this.templateName = templateName;
    return this;
  }

   /**
   * 模板名称
   * @return templateName
  **/
  @javax.annotation.Nullable
  public String getTemplateName() {
    return templateName;
  }


  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }


  public CreativeTemplateListGetV2ResponseDataListsInner templateTags(List<CreativeTemplateListGetV2ResponseDataListsInnerTemplateTagsInner> templateTags) {
    
    this.templateTags = templateTags;
    return this;
  }

  public CreativeTemplateListGetV2ResponseDataListsInner addTemplateTagsItem(CreativeTemplateListGetV2ResponseDataListsInnerTemplateTagsInner templateTagsItem) {
    if (this.templateTags == null) {
      this.templateTags = new ArrayList<>();
    }
    this.templateTags.add(templateTagsItem);
    return this;
  }

   /**
   * 模板标签列表
   * @return templateTags
  **/
  @javax.annotation.Nullable
  public List<CreativeTemplateListGetV2ResponseDataListsInnerTemplateTagsInner> getTemplateTags() {
    return templateTags;
  }


  public void setTemplateTags(List<CreativeTemplateListGetV2ResponseDataListsInnerTemplateTagsInner> templateTags) {
    this.templateTags = templateTags;
  }


  public CreativeTemplateListGetV2ResponseDataListsInner templateType(CreativeTemplateListGetV2DataListsTemplateType templateType) {
    
    this.templateType = templateType;
    return this;
  }

   /**
   * Get templateType
   * @return templateType
  **/
  @javax.annotation.Nullable
  public CreativeTemplateListGetV2DataListsTemplateType getTemplateType() {
    return templateType;
  }


  public void setTemplateType(CreativeTemplateListGetV2DataListsTemplateType templateType) {
    this.templateType = templateType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreativeTemplateListGetV2ResponseDataListsInner creativeTemplateListGetV2ResponseDataListsInner = (CreativeTemplateListGetV2ResponseDataListsInner) o;
    return Objects.equals(this.coverUrl, creativeTemplateListGetV2ResponseDataListsInner.coverUrl) &&
        Objects.equals(this.imageMode, creativeTemplateListGetV2ResponseDataListsInner.imageMode) &&
        Objects.equals(this.previewUrl, creativeTemplateListGetV2ResponseDataListsInner.previewUrl) &&
        Objects.equals(this.templateDesc, creativeTemplateListGetV2ResponseDataListsInner.templateDesc) &&
        Objects.equals(this.templateId, creativeTemplateListGetV2ResponseDataListsInner.templateId) &&
        Objects.equals(this.templateName, creativeTemplateListGetV2ResponseDataListsInner.templateName) &&
        Objects.equals(this.templateTags, creativeTemplateListGetV2ResponseDataListsInner.templateTags) &&
        Objects.equals(this.templateType, creativeTemplateListGetV2ResponseDataListsInner.templateType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(coverUrl, imageMode, previewUrl, templateDesc, templateId, templateName, templateTags, templateType);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreativeTemplateListGetV2ResponseDataListsInner {\n");
    sb.append("    coverUrl: ").append(toIndentedString(coverUrl)).append("\n");
    sb.append("    imageMode: ").append(toIndentedString(imageMode)).append("\n");
    sb.append("    previewUrl: ").append(toIndentedString(previewUrl)).append("\n");
    sb.append("    templateDesc: ").append(toIndentedString(templateDesc)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    templateTags: ").append(toIndentedString(templateTags)).append("\n");
    sb.append("    templateType: ").append(toIndentedString(templateType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cover_url");
    openapiFields.add("image_mode");
    openapiFields.add("preview_url");
    openapiFields.add("template_desc");
    openapiFields.add("template_id");
    openapiFields.add("template_name");
    openapiFields.add("template_tags");
    openapiFields.add("template_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }


  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreativeTemplateListGetV2ResponseDataListsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreativeTemplateListGetV2ResponseDataListsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreativeTemplateListGetV2ResponseDataListsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreativeTemplateListGetV2ResponseDataListsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CreativeTemplateListGetV2ResponseDataListsInner>() {
           @Override
           public void write(JsonWriter out, CreativeTemplateListGetV2ResponseDataListsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreativeTemplateListGetV2ResponseDataListsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreativeTemplateListGetV2ResponseDataListsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreativeTemplateListGetV2ResponseDataListsInner
  * @throws IOException if the JSON string is invalid with respect to CreativeTemplateListGetV2ResponseDataListsInner
  */
  public static CreativeTemplateListGetV2ResponseDataListsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreativeTemplateListGetV2ResponseDataListsInner.class);
  }

 /**
  * Convert an instance of CreativeTemplateListGetV2ResponseDataListsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

